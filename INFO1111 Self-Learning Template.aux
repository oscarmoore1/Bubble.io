\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\providecommand\babel@aux[2]{}
\@nameuse{bbl@beforestart}
\babel@aux{english}{}
\@writefile{toc}{\contentsline {section}{\numberline {1.}Level A: Initial Understanding}{2}{section.0.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.}Level A Demonstration}{2}{subsection.0.1.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.}Learning Approach}{2}{subsection.0.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.}Challenges and Difficulties}{2}{subsection.0.1.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.}Learning Sources}{2}{subsection.0.1.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5.}Application artifacts}{3}{subsection.0.1.5}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:image1}{{1a}{4}{preview of landing page\relax }{figure.caption.1}{}}
\newlabel{sub@fig:image1}{{a}{4}{preview of landing page\relax }{figure.caption.1}{}}
\newlabel{fig:image2}{{1b}{4}{Sinpet of code for landing page\relax }{figure.caption.1}{}}
\newlabel{sub@fig:image2}{{b}{4}{Sinpet of code for landing page\relax }{figure.caption.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces The brunt of the information on the landing screen was included in a VStack as you can see above. This organized all my information vertically down the screen. In terms of the logic of the above code, there is very little. It is mostly formatting code so that it looks visually pleasing. \relax }}{4}{figure.caption.1}\protected@file@percent }
\newlabel{fig:images}{{1}{4}{The brunt of the information on the landing screen was included in a VStack as you can see above. This organized all my information vertically down the screen. In terms of the logic of the above code, there is very little. It is mostly formatting code so that it looks visually pleasing.\\\relax }{figure.caption.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.}Level B: Basic Application}{5}{section.0.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.}Level B Demonstration}{5}{subsection.0.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.}Application artifacts}{5}{subsection.0.2.2}\protected@file@percent }
\newlabel{fig:image1}{{2a}{6}{json example\relax }{figure.caption.2}{}}
\newlabel{sub@fig:image1}{{a}{6}{json example\relax }{figure.caption.2}{}}
\newlabel{fig:image2}{{2b}{6}{snipet of code used to read JSON\relax }{figure.caption.2}{}}
\newlabel{sub@fig:image2}{{b}{6}{snipet of code used to read JSON\relax }{figure.caption.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  The way this works: the Swift file finds the JSON file in its local repository and passes it through a LoadJson() function. This function returns the bubble object in the correct format as defined by the structure in the code.  \relax }}{6}{figure.caption.2}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3.}Level C: Deeper Understanding}{7}{section.0.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.}Strengths}{7}{subsection.0.3.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.}Weaknesses}{7}{subsection.0.3.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.}Usefulness}{7}{subsection.0.3.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.}Key Question 1}{7}{subsection.0.3.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.}Key Question 2}{8}{subsection.0.3.5}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4.}Level D: Evolution of skills}{9}{section.0.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.}Level D Demonstration}{9}{subsection.0.4.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.}Application artifacts}{9}{subsection.0.4.2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Function code\relax }}{10}{figure.caption.3}\protected@file@percent }
\newlabel{fig:example}{{3}{10}{Function code\relax }{figure.caption.3}{}}
\newlabel{fig:image1}{{4a}{11}{preview of page\relax }{figure.caption.4}{}}
\newlabel{sub@fig:image1}{{a}{11}{preview of page\relax }{figure.caption.4}{}}
\newlabel{fig:image2}{{4b}{11}{Sinpet of code for page\relax }{figure.caption.4}{}}
\newlabel{sub@fig:image2}{{b}{11}{Sinpet of code for page\relax }{figure.caption.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces  The way this works: the Swift file finds the JSON file in its local repository and passes it through a LoadJson() function. This function returns the bubble object in the correct format as defined by the structure in the code. The BubbleCircle function is called and returns the bubble circle view that you can see on the left hand side. It takes the name and size parameters and outputs the circles accordingly \relax }}{11}{figure.caption.4}\protected@file@percent }
\newlabel{fig:images}{{4}{11}{The way this works: the Swift file finds the JSON file in its local repository and passes it through a LoadJson() function. This function returns the bubble object in the correct format as defined by the structure in the code. The BubbleCircle function is called and returns the bubble circle view that you can see on the left hand side. It takes the name and size parameters and outputs the circles accordingly \relax }{figure.caption.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Object code\relax }}{12}{figure.caption.5}\protected@file@percent }
\newlabel{fig:example}{{5}{12}{Object code\relax }{figure.caption.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.}Alternative tools/technologies}{12}{subsection.0.4.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.}Comparative Analysis}{12}{subsection.0.4.4}\protected@file@percent }
\bibstyle{ieeetran}
\bibdata{main}
\gdef \@abspage@last{13}
